generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RecurringType {
  INCOME
  EXPENSE
}

enum TradeType {
  BUY_CALL
  BUY_PUT
  SELL_CALL
  SELL_PUT
}

enum Realized {
  GAIN
  LOSS
}

model Trade {
  id                   String       @id @default(cuid())
  date                 String
  profitLoss           Float
  realized             Realized
  strike               Int
  ticker               String
  type                 TradeType
  contracts            Int
  sellToOpen           Float
  buyToClose           Float
  profitLossPercentage Float
  WeeklyTrade          WeeklyTrade  @relation(fields: [weeklyTradeId], references: [id], onDelete: Cascade)
  weeklyTradeId        String
  MonthlyTrade         MonthlyTrade @relation(fields: [monthlyTradeId], references: [id], onDelete: Cascade)
  monthlyTradeId       String
  TickerTrade          TickerTrade  @relation(fields: [tickerTradeId], references: [id], onDelete: Cascade)
  tickerTradeId        String
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @default(now())
}

model MonthlyTrade {
  id           String        @id @default(cuid())
  total        Float
  tradeCount   Int
  month        Int
  year         Int
  weeklyTrades WeeklyTrade[]
  trades       Trade[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())

  @@unique([month, year])
}

model WeeklyTrade {
  id             String       @id @default(cuid())
  startDate      String
  endDate        String
  total          Float
  tradeCount     Int
  week           Int
  year           Int
  trades         Trade[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  MonthlyTrade   MonthlyTrade @relation(fields: [monthlyTradeId], references: [id])
  monthlyTradeId String

  @@unique([week, year])
}

model TickerTrade {
  id         String   @id @default(cuid())
  total      Float
  tradeCount Int
  ticker     String   @unique
  trades     Trade[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model MonthlyRecurring {
  id            String        @id @default(cuid())
  dueDayOfMonth String
  name          String
  amount        Float
  category      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  type          RecurringType
}

model YearlyRecurring {
  id          String        @id @default(cuid())
  monthDayDue String
  name        String
  amount      Float
  category    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  type        RecurringType
}
